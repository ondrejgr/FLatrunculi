<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:vm="clr-namespace:Latrunculi.ViewModel;assembly=Latrunculi.ViewModel"
    xmlns:ctrls="clr-namespace:Latrunculi.GUI.Controls">

    <Style TargetType="{x:Type ctrls:Board}">
        <Setter Property="MinHeight" Value="192"/>
        <Setter Property="MinWidth" Value="192"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ctrls:Row ItemsSource="{Binding Squares}" SquareSize="{Binding RelativeSource={RelativeSource AncestorType=ctrls:Board}, Path=SquareSize}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:Board}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ThicknessAnimation From="2" To="0" Duration="0:00:00.5" Storyboard.TargetName="border" Storyboard.TargetProperty="BorderThickness" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <ThicknessAnimation From="0" To="2" Duration="0:00:01" Storyboard.TargetName="border" Storyboard.TargetProperty="BorderThickness" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="Navy"
                                BorderThickness="0" x:Name="border"
                                CornerRadius="8,8,8,8">
                            <ItemsPresenter/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctrls:Row}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:Row}">
                    <ControlTemplate.Resources>
                        <DataTemplate DataType="{x:Type vm:BoardSquareBottomLeftHeaderViewModel}">
                            <ctrls:Square Height="15" Width="15"/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type vm:BoardSquareRowHeaderViewModel}">
                            <ctrls:Square Height="{Binding RelativeSource={RelativeSource AncestorType=ctrls:Row}, Path=SquareSize}" Width="15">
                                <TextBlock Text="{Binding Content}" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </ctrls:Square>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type vm:BoardSquareColumnHeaderViewModel}">
                            <ctrls:Square Height="15" Width="{Binding RelativeSource={RelativeSource AncestorType=ctrls:Row}, Path=SquareSize}">
                                <TextBlock Text="{Binding Content}" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </ctrls:Square>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type vm:BoardSquareViewModel}">
                            <ctrls:Square
                                Height="{Binding RelativeSource={RelativeSource AncestorType=ctrls:Row}, Path=SquareSize}"
                                Width="{Binding RelativeSource={RelativeSource AncestorType=ctrls:Row}, Path=SquareSize}">
                                <ctrls:Piece/>
                            </ctrls:Square>
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctrls:Square}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Command" Value="{x:Static ctrls:ControlCommands.BoardSquareClick}"/>
        <Setter Property="CommandParameter" Value="{Binding}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:Square}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="blinkRedBorderAnimation" Duration="00:00:01.200" >
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="{Binding}"
                                                          AutoReverse="False">
                                <ColorAnimationUsingKeyFrames.KeyFrames>
                                    <DiscreteColorKeyFrame KeyTime="0:00:00.000" Value="Transparent"/>
                                    <DiscreteColorKeyFrame KeyTime="0:00:00.250" Value="Red"/>
                                    <DiscreteColorKeyFrame KeyTime="0:00:00.600" Value="Transparent"/>
                                    <DiscreteColorKeyFrame KeyTime="0:00:00.900" Value="Red"/>
                                    <DiscreteColorKeyFrame KeyTime="0:00:01.200" Value="Transparent"/>
                                </ColorAnimationUsingKeyFrames.KeyFrames>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ThicknessAnimation From="1" To="0" Duration="0:00:00.001" Storyboard.TargetName="bg" Storyboard.TargetProperty="BorderThickness" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <ThicknessAnimation From="0" To="1" Duration="0:00:00.001" Storyboard.TargetName="bg" Storyboard.TargetProperty="BorderThickness" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="bg" BorderBrush="Navy" BorderThickness="0" Panel.ZIndex="1"/>
                        <Border x:Name="bgSelected" Background="Transparent" Panel.ZIndex="2"/>
                        <ContentPresenter Panel.ZIndex="3"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=SquareColor}" Value="scWhite">
                            <Setter TargetName="bg" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{Binding RelativeSource={RelativeSource AncestorType=ctrls:Board}, Path=WhiteSquareColor}"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=SquareColor}" Value="scBlack">
                            <Setter TargetName="bg" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{Binding RelativeSource={RelativeSource AncestorType=ctrls:Board}, Path=BlackSquareColor}"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsSuggestedMove}" Value="True">
                            <Setter TargetName="bg" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="Yellow"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                            <Setter TargetName="bg" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="Green"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type ctrls:Piece}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:Piece}">
                    <Grid Background="Transparent">
                        <Ellipse x:Name="ellipse" Stroke="Transparent" Margin="5,5,5,5">
                            <Ellipse.Fill>
                                <SolidColorBrush Color="Transparent"/>
                            </Ellipse.Fill>
                        </Ellipse>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=PieceType}" Value="ptWhite">
                            <Setter TargetName="ellipse" Property="Stroke" Value="Black" />
                            <Setter TargetName="ellipse" Property="Fill">
                                <Setter.Value>
                                    <SolidColorBrush Color="White"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=PieceType}" Value="ptBlack">
                            <Setter TargetName="ellipse" Property="Stroke" Value="White" />
                            <Setter TargetName="ellipse" Property="Fill">
                                <Setter.Value>
                                    <SolidColorBrush Color="Black"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctrls:PiecesCount}">
        <Setter Property="Margin" Value="5,0,5,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:PiecesCount}">
                    <GroupBox Header="Počet zbývajících kamenů">
                        <Grid>
                            <TextBlock TextAlignment="Right" x:Name="txt" FontSize="18" FontWeight="Bold" Text="{Binding Path=Count, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Grid>
                    </GroupBox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsWinning" Value="True">
                            <Trigger.Setters>
                                <Setter TargetName="txt" Property="Foreground" Value="Green"/>
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="IsLosing" Value="True">
                            <Trigger.Setters>
                                <Setter TargetName="txt" Property="Foreground" Value="Red"/>
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="ValidationToolTipTemplate">
        <Grid x:Name="Root" Margin="5,0" RenderTransformOrigin="0,0" Opacity="0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25"/>
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0"/>
                        <VisualTransition To="Open" GeneratedDuration="0:0:0.2">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" Duration="0"/>
                            <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Border Margin="4,4,-4,-4" Background="#052A2E31" CornerRadius="5"/>
            <Border Margin="3,3,-3,-3" Background="#152A2E31" CornerRadius="4"/>
            <Border Margin="2,2,-2,-2" Background="#252A2E31" CornerRadius="3"/>
            <Border Margin="1,1,-1,-1" Background="#352A2E31" CornerRadius="2"/>

            <Border Background="#FFDC000C" CornerRadius="2"/>
            <Border CornerRadius="2">
                <TextBlock 
                  UseLayoutRounding="false" 
                  Foreground="White" Margin="8,4,8,4" MaxWidth="250" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}"/>
            </Border>
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type ctrls:History}">
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Background" Value="#FFFFFFFF" />
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctrls:History">
                    <GroupBox Header="Historie tahů" Margin="5,5,5,5">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid"/>
                                    <VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                                <DiscreteObjectKeyFrame KeyTime="0" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <sys:Boolean>True</sys:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border CornerRadius="2" 
			                BorderBrush="{TemplateBinding BorderBrush}"
			                BorderThickness="{TemplateBinding BorderThickness}">
                                <ScrollViewer x:Name="ScrollViewer" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>
                            <Border x:Name="ValidationErrorElement" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="#FFDB000C" Visibility="Collapsed">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Name="validationTooltip" Template="{StaticResource ValidationToolTipTemplate}" Placement="Right" 
                                             PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                                             DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToolTip.Triggers>
                                            <EventTrigger RoutedEvent="Canvas.Loaded">
                                                <EventTrigger.Actions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                                                                <DiscreteObjectKeyFrame KeyTime="0" >
                                                                    <DiscreteObjectKeyFrame.Value>
                                                                        <sys:Boolean>true</sys:Boolean>
                                                                    </DiscreteObjectKeyFrame.Value>
                                                                </DiscreteObjectKeyFrame>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger.Actions>
                                            </EventTrigger>
                                        </ToolTip.Triggers>
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                                <Grid Width="10" Height="10" HorizontalAlignment="Right" Margin="0,-4,-4,0" VerticalAlignment="Top" Background="Transparent">
                                    <Path Margin="-1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C"/>
                                    <Path Margin="-1,3,0,0" Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </GroupBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
